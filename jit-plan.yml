name: My plan
level: beginner
author: Jit
version: 0.1
owners:
  default: null
references:
  - https://www.jit.io
tags: []
items:
  - name: Scan your API for vulnerabilities
    uses: jitsecurity-controls/jit-plans/items/runtime/item-api-security.yml@latest
  - name: Scan your code for vulnerabilities (SAST)
    uses: >-
      jitsecurity-controls/jit-plans/items/code/item-code-vulnerability.yml@latest
  - name: Scan your Dockerfiles for vulnerabilities
    uses: >-
      jitsecurity-controls/jit-plans/items/infrastructure/item-container-scan.yml@latest
  - name: Scan your code dependencies for vulnerabilities (SCA)
    uses: jitsecurity-controls/jit-plans/items/code/item-dependency-check.yml@latest
  - name: Detect GitHub misconfigurations
    uses: >-
      jitsecurity-controls/jit-plans/items/third_party_app/item-github-misconfiguration.yml@latest
  - name: Scan your infrastructure-as-code (IaC) for misconfigurations
    uses: >-
      jitsecurity-controls/jit-plans/items/infrastructure/item-iac-misconfiguration-detection.yml@latest
  - name: Ensure IAM roles adhere to the least privilege principle
    uses: >-
      jitsecurity-controls/jit-plans/items/infrastructure/item-least-privileged-iam.yml@latest
  - name: Verify that MFA for your GitHub organization is enabled
    uses: >-
      jitsecurity-controls/jit-plans/items/third_party_app/item-mfa-scm.yml@latest
  - name: Scan infrastructure for runtime misconfigurations
    uses: >-
      jitsecurity-controls/jit-plans/items/infrastructure/item-runtime-misconfiguration-detection.yml@latest
  - name: Scan code for hard-coded secrets
    uses: jitsecurity-controls/jit-plans/items/code/item-secret-detection.yml@latest
  - name: Scan your web application for vulnerabilities
    uses: >-
      jitsecurity-controls/jit-plans/items/runtime/item-web-app-scanner.yml@latest
  - name: Verify that the users of your AWS accounts have enabled MFA
    uses: >-
      jitsecurity-controls/jit-plans/items/infrastructure/item-mfa-cloud-providers.yml@latest
override:
  workflows:
    mfa-aws-checker:
      jobs:
        mfa-aws-checker:
          default: true
          runner:
            type: jit
            setup:
              auth_type: aws_iam_role
          asset_type: aws_account
          steps:
            - name: Run MFA checker
              uses: 121169888995.dkr.ecr.us-east-1.amazonaws.com/aws-mfa:main
              with:
                env:
                  AWS_ACCESS_KEY_ID: ${{ context.auth.config.aws_access_key_id }}
                  AWS_SECRET_ACCESS_KEY: ${{ context.auth.config.aws_secret_access_key }}
                  AWS_SESSION_TOKEN: ${{ context.auth.config.aws_session_token }}
                  AWS_REGION_NAME: ${{ context.auth.config.region_name }}
              tags:
                security_tool: AWS MFA Checker
                links:
                  github: https://github.com/jitsecurity-controls/jit-aws-mfa-control 
    sast:
      jobs:
        static-code-analysis-python:
          enabled: true
        static-code-analysis-python-semgrep:
          enabled: true
