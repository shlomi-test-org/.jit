name: My plan
level: beginner
author: Jit
version: 0.1
owners:
  default: null
references:
  - https://www.jit.io
tags: []
items:
  - name: Access Control Architecture
    uses: >-
      jitsecurity-controls/jit-plans/items/architecture_design_and_threat_modeling/item-access-control-architecture.yml@latest
  - name: Ensure all credentials used by your applications are not hard-coded
    uses: >-
      jitsecurity-controls/jit-plans/items/identity_and_access_management/item-aws-ftr-secret-detection.yml@latest
  - name: Scan your code for vulnerabilities (SAST)
    uses: >-
      jitsecurity-controls/jit-plans/items/code/item-code-vulnerability.yml@latest
  - name: Configuration Architecture
    uses: >-
      jitsecurity-controls/jit-plans/items/architecture_design_and_threat_modeling/item-configuration-architecture.yml@latest
  - name: Scan your Dockerfiles for vulnerabilities
    uses: >-
      jitsecurity-controls/jit-plans/items/infrastructure/item-container-scan.yml@latest
  - name: Errors, Logging and Auditing Architecture
    uses: >-
      jitsecurity-controls/jit-plans/items/architecture_design_and_threat_modeling/item-errors-logging-and-auditing-architecture.yml@latest
  - name: Scan Kubernetes configuration files
    uses: >-
      jitsecurity-controls/jit-plans/items/infrastructure/item-iac-kubernetes.yml@latest
  - name: Scan your infrastructure-as-code (IaC) for misconfigurations
    uses: >-
      jitsecurity-controls/jit-plans/items/infrastructure/item-iac-misconfiguration-detection.yml@latest
  - name: Input and Output Architecture
    uses: >-
      jitsecurity-controls/jit-plans/items/architecture_design_and_threat_modeling/item-input-and-output-architecture.yml@latest
  - name: Malicious Software Architecture
    uses: >-
      jitsecurity-controls/jit-plans/items/architecture_design_and_threat_modeling/item-malicious-software-architecture.yml@latest
  - name: Scan infrastructure for runtime misconfigurations (GCP)
    uses: >-
      jitsecurity-controls/jit-plans/items/infrastructure/item-runtime-misconfiguration-detection-gcp.yml@latest
  - name: Scan code for hard-coded secrets
    uses: jitsecurity-controls/jit-plans/items/code/item-secret-detection.yml@latest
  - name: Secure File Upload Architecture
    uses: >-
      jitsecurity-controls/jit-plans/items/architecture_design_and_threat_modeling/item-secure-file-upload-architecture.yml@latest
  - name: Secure Software Development Lifecycle
    uses: >-
      jitsecurity-controls/jit-plans/items/architecture_design_and_threat_modeling/item-secure-software-development-lifecycle.yml@latest
  - name: Generate a Software Bill of Materials (SBOM)
    uses: >-
      jitsecurity-controls/jit-plans/items/code/item-software-bill-of-materials.yml@latest
  - name: Detect GitHub misconfigurations
    uses: >-
      jitsecurity-controls/jit-plans/items/third_party_app/item-github-misconfiguration.yml@latest
  - name: Scan your web application for vulnerabilities
    uses: >-
      jitsecurity-controls/jit-plans/items/runtime/item-web-app-scanner.yml@latest
override:
  workflows:
    api-security:
      jobs:
        api-security-detection:
          runner:
            setup:
              checkout: false
            type: github_actions
          steps:
            - name: Run ZAP
              uses: registry.jit.io/zap:not-hardened-avichay-asvs
    asvs-secure-software-development-lifecycle:
      jobs:
        web-security-detection-secure-software-development-lifecycle:
          runner:
            setup:
              checkout: false
              timeout_minutes: 100
            type: github_actions
          steps:
            - name: Run ZAP
              uses: registry.jit.io/zap:not-hardened-avichay-asvs
    kubernetes-iac-misconfiguration-detection:
      jobs:
        iac-misconfig-detection-kubernetes:
          runner:
            setup:
              checkout: true
              timeout_minutes: 100
            type: github_actions
    runtime-misconfiguration-detection-gcp:
      jobs:
        runtime-misconfig-detection-gcp:
          steps:
            - name: Run Prowler
              uses: 899025839375.dkr.ecr.us-east-1.amazonaws.com/prowler:latest
              with:
                env:
                  GCP_CREDENTIALS: ${{ jit_secrets.${{ context.asset.asset_name }} }}
    sbom:
      jobs:
        software-bill-of-materials:
          steps:
            - name: Run syft
              uses: registry.jit.io/control-syft-alpine:not-hardened-main
    web-app-scanner:
      jobs:
        web-security-detection:
          runner:
            setup:
              checkout: false
            type: github_actions
          steps:
            - name: Run ZAP
              uses: registry.jit.io/zap:not-hardened-avichay-asvs
    workflow-enrichment-code:
      jobs:
        enrich:
          steps:
            - name: Run code enrichment
              uses: >-
                registry.jit.io/control-enrichment-slim:not-hardened-sc-24043-enrichment-control-add-serverless-file-metadatan
