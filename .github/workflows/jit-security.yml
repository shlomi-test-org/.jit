name: Workflows generated by the MVS plan
run-name: ${{fromJSON(github.event.inputs.client_payload).payload.job_title}}
on:
  workflow_dispatch:
    inputs:
       client_payload:
          description: The Client payload
          required: true

permissions:
  contents: read
  id-token: write

jobs:
  docker-scan:
    if: fromJSON(github.event.inputs.client_payload).payload.workflow_job_name == 'docker-scan' && fromJSON(github.event.inputs.client_payload).payload.workflow_slug == 'workflow-docker-scan'
    runs-on: ubuntu-20.04
    timeout-minutes: 60
    steps:
    - name: trivy
      uses: jitsecurity-controls/jit-github-action@v4.2.0
      with:
        security_control: registry.jit.io/control-trivy-alpine:main
        
  enrich:
    if: fromJSON(github.event.inputs.client_payload).payload.workflow_job_name == 'enrich' && fromJSON(github.event.inputs.client_payload).payload.workflow_slug == 'workflow-enrichment-code'
    runs-on: ubuntu-20.04
    timeout-minutes: 60
    steps:
    - name: enrichment
      uses: jitsecurity-controls/jit-github-action@v4.2.0
      with:
        security_control: registry.jit.io/control-enrichment-slim:main
        
  iac-misconfig-detection-cloudformation:
    if: fromJSON(github.event.inputs.client_payload).payload.workflow_job_name == 'iac-misconfig-detection-cloudformation' && fromJSON(github.event.inputs.client_payload).payload.workflow_slug == 'workflow-iac-misconfiguration-detection'
    runs-on: ubuntu-20.04
    timeout-minutes: 60
    steps:
    - name: kics
      uses: jitsecurity-controls/jit-github-action@v4.2.0
      with:
        security_control: registry.jit.io/control-kics-alpine:main
        security_control_output_file: /code/jit-report/results.json
        
  iac-misconfig-detection-kubernetes:
    if: fromJSON(github.event.inputs.client_payload).payload.workflow_job_name == 'iac-misconfig-detection-kubernetes' && fromJSON(github.event.inputs.client_payload).payload.workflow_slug == 'workflow-kubernetes-iac-misconfiguration-detection'
    runs-on: ubuntu-20.04
    timeout-minutes: 60
    steps:
    - name: kubescape
      uses: jitsecurity-controls/jit-github-action@v4.2.0
      with:
        security_control: registry.jit.io/control-kubescape-slim:main
        security_control_output_file: /code/results.json
        
  iac-misconfig-detection-pulumi:
    if: fromJSON(github.event.inputs.client_payload).payload.workflow_job_name == 'iac-misconfig-detection-pulumi' && fromJSON(github.event.inputs.client_payload).payload.workflow_slug == 'workflow-iac-misconfiguration-detection'
    runs-on: ubuntu-20.04
    timeout-minutes: 60
    steps:
    - name: kics
      uses: jitsecurity-controls/jit-github-action@v4.2.0
      with:
        security_control: registry.jit.io/control-kics-alpine:main
        security_control_output_file: /code/jit-report/results.json
        
  iac-misconfig-detection-terraform:
    if: fromJSON(github.event.inputs.client_payload).payload.workflow_job_name == 'iac-misconfig-detection-terraform' && fromJSON(github.event.inputs.client_payload).payload.workflow_slug == 'workflow-iac-misconfiguration-detection'
    runs-on: ubuntu-20.04
    timeout-minutes: 60
    steps:
    - name: kics
      uses: jitsecurity-controls/jit-github-action@v4.2.0
      with:
        security_control: registry.jit.io/control-kics-alpine:main
        security_control_output_file: /code/jit-report/results.json
        
  license-compliance-checker:
    if: fromJSON(github.event.inputs.client_payload).payload.workflow_job_name == 'license-compliance-checker' && fromJSON(github.event.inputs.client_payload).payload.workflow_slug == 'workflow-license-compliance'
    runs-on: ubuntu-20.04
    timeout-minutes: 60
    steps:
    - name: license-checker
      uses: jitsecurity-controls/jit-github-action@v4.2.0
      with:
        security_control: registry.jit.io/control-license-checker-alpine:main
        
  remediation-pr:
    if: fromJSON(github.event.inputs.client_payload).payload.workflow_job_name == 'remediation-pr' && fromJSON(github.event.inputs.client_payload).payload.workflow_slug == 'workflow-remediation-pr'
    runs-on: ubuntu-20.04
    timeout-minutes: 60
    steps:
    - name: remediation-pr
      uses: jitsecurity-controls/jit-github-action@v4.2.0
      with:
        security_control: registry.jit.io/open-remediation-pr-alpine:main
        security_control_output_file: /opt/code/jit-report/results.json
        
  secret-detection-ftr:
    if: fromJSON(github.event.inputs.client_payload).payload.workflow_job_name == 'secret-detection-ftr' && fromJSON(github.event.inputs.client_payload).payload.workflow_slug == 'workflow-secret-detection-ftr'
    runs-on: ubuntu-20.04
    timeout-minutes: 60
    steps:
    - name: gitleaks
      uses: jitsecurity-controls/jit-github-action@v4.2.0
      with:
        security_control: registry.jit.io/control-gitleaks-alpine:main
        security_control_output_file: /tmp/report.json
        